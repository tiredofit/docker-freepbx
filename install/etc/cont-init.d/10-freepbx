#!/usr/bin/with-contenv bash

for s in /assets/functions/*; do source $s; done
PROCESS_NAME="freepbx"

## Embedded DB Variance
if [[ "$DB_EMBEDDED" = "TRUE" ]] || [[ "$DB_EMBEDDED" = "true" ]];  then
   DB_EMBEDDED=TRUE
else
   DB_EMBEDDED=FALSE
fi

if [[ "$DB_EMBEDDED" = "FALSE" ]] || [[ "$DB_EMBEDDED" = "false" ]];  then
  sanity_db
fi

if [[ "$DB_EMBEDDED" = "FALSE" ]] || [[ "$DB_EMBEDDED" = "false" ]];  then
  db_ready mariadb
fi

### Startup
if [ ! -f /data/.installed ]; then
  print_notice "Creating default configuration files"
  mkdir -p /data/
  cp -R /assets/config/* /data/
fi

### Container Version Sanity Check
if [ -f /data/etc/asterisk/.asterisk_version ]; then
  ASTERISK_VERSION_TMP=`cat /data/etc/asterisk/.asterisk_version`
  ASTERISK_VERSION_TMP=${ASTERISK_VERSION_TMP:0:2}

  if [[ ${ASTERISK_VERSION_TMP//./} -lt "16" ]]; then
    print_error "****"
    print_error "***** This container has been detected to have FreePBX 14 installed"
    print_error "***** You cannot perform an inplace upgrade to FreePBX 15 and Asterisk 17"
    print_error "***** To continue using this image switch to using tiredofit/freepbx:14-latest"
    print_error "***** See https://github.com/tiredofit/docker-freepbx/issues/51 for more details"
    print_error "***** This container will now cease to function"
    print_error "****"
    exit 1
  fi
fi

print_notice "Setting file permissions"
mkdir -p /data/etc/asterisk
mkdir -p /data/var/lib/asterisk/{agi-bin,bin,playback}
mkdir -p /data/var/spool/asterisk/{cache,dictate,meetme,monitor,recording,system,tmp,voicemail}
mkdir -p /data/var/run/asterisk
mkdir -p /data/home/asterisk
mkdir -p /home/asterisk
ln -sf /data/home/asterisk /home/asterisk && \
chown -R asterisk:asterisk /data

### Check if FreePBX Installed
if [ ! -f $WEBROOT/admin/index.php ]; then
    print_info "New install detected - please wait while we fetch FreePBX - Will take 3 to 30 minutes!"

  if [ "$WEBROOT" != "/var/www/html" ]; then
    print_notice "Custom installation webroot defined: '${WEBROOT}'"
  fi

  if [[ "$DB_EMBEDDED" = "FALSE" ]] || [[ "$DB_EMBEDDED" = "false" ]];  then
    cat <<EOF > /etc/odbc.ini
[MySQL-asteriskcdrdb]
Description = MySQL connection to 'asteriskcdrdb' database
driver = MySQL
server = $DB_HOST
User = $DB_USER
Password = $DB_PASS
database = $DB_NAME
Port = $DB_PORT
option = 3

[asteriskcdrdb]
Description = MySQL connection to 'asteriskcdrdb' database
driver = MySQL
server = $DB_HOST
User = $DB_USER
Password = $DB_PASS
database = $DB_NAME
Port = $DB_PORT
option = 3

EOF
  fi

    cd /usr/src
    mkdir -p /usr/src/freepbx
    curl -ssL https://github.com/FreePBX/framework/archive/release/${FREEPBX_VERSION}.tar.gz| tar xfz - --strip 1 -C /usr/src/freepbx

    silent sudo -u asterisk gpg --refresh-keys --keyserver hkp://keyserver.ubuntu.com:80
    silent sudo -u asterisk gpg --import /usr/src/freepbx/amp_conf/htdocs/admin/libraries/BMO/9F9169F4B33B4659.key
    silent sudo -u asterisk gpg --import /usr/src/freepbx/amp_conf/htdocs/admin/libraries/BMO/3DDB2122FE6D84F7.key
    silent sudo -u asterisk gpg --import /usr/src/freepbx/amp_conf/htdocs/admin/libraries/BMO/86CE877469D2EAD9.key

    cd /usr/src/freepbx
    cp -R /etc/odbc.ini /usr/src/freepbx/installlib/files/odbc.ini
    touch /etc/asterisk/{modules,cdr}.conf
    print_notice "Starting Asterisk ${ASTERISK_VERSION} for the first time"
    silent ./start_asterisk start

  if [ ! -f "/var/run/asterisk/asterisk.pid" ]; then
    print_error "Can't seem to start Asterisk.. exiting"
    exit 1
  fi

  if [[ "$DB_EMBEDDED" = "FALSE" ]] || [[ "$DB_EMBEDDED" = "false" ]];  then
    sed -i "s/'default' => 'localhost',/'default' => '$DB_HOST',/g" /usr/src/freepbx/installlib/installcommand.class.php
    sed -i -e "s/'default' => 'asteriskcdrdb',/'default' => '$DB_NAME',/g" /usr/src/freepbx/installlib/installcommand.class.php
    sed -i -e "s#\$amp_conf\['CDRDBNAME'\] = \$answers\['cdrdbname'\];#\$amp_conf\['CDRDBNAME'\] = '$DB_NAME';#g" /usr/src/freepbx/installlib/installcommand.class.php
  fi

  print_notice "Installing FreePBX source code"

  if [[ "$DB_EMBEDDED" = "FALSE" ]] || [[ "$DB_EMBEDDED" = "false" ]];  then
    silent ./install -n --dbuser=$DB_USER --dbpass=$DB_PASS --dbname=$DB_NAME --cdrdbname=$DB_NAME --webroot=$WEBROOT
  else
    silent ./install -n --webroot=$WEBROOT
  fi

  if [[ "$DB_EMBEDDED" = "FALSE" ]] || [[ "$DB_EMBEDDED" = "false" ]];  then
    cat <<EOF > /etc/freepbx.conf
<?php
\$amp_conf['AMPDBUSER'] = '$DB_USER';
\$amp_conf['AMPDBPASS'] = '$DB_PASS';
\$amp_conf['AMPDBPORT'] = '$DB_PORT';
\$amp_conf['AMPDBHOST'] = '$DB_HOST';
\$amp_conf['AMPDBNAME'] = '$DB_NAME';
\$amp_conf['AMPDBENGINE'] = 'mysql';
\$amp_conf['CDRDBNAME'] = '$DB_NAME';
\$amp_conf['CDRDBHOST'] = '$DB_HOST';
\$amp_conf['CDRDBNAME'] = '$DB_NAME';
\$amp_conf['CDRDBUSER'] = '$DB_USER';
\$amp_conf['CDRDBPASS'] = '$DB_PASS';
\$amp_conf['CDRDBPORT'] = '$DB_PORT';
\$amp_conf['CDRDBTYPE'] = 'mysql';
require_once('$WEBROOT/admin/bootstrap.php');
?>
EOF
  fi

  if [ ! -f "/usr/sbin/fwconsole" ]; then
    print_error "Can't seem to locate /usr/sbin/fwconsole.. exiting"
    exit 1
  fi

  print_notice "Enabling default modules"
  print_notice "Module install: framework, core"
  check_process
  silent fwconsole ma downloadinstall framework core
  sleep 3
  silent check_process
  sleep 3
  fwconsole ma download cdr

  if [[ "$DB_EMBEDDED" = "FALSE" ]] || [[ "$DB_EMBEDDED" = "false" ]];  then
    # CDR Hack
    mysql -u$DB_USER -p$DB_PASS -h$DB_HOST -P$DB_PORT $DB_NAME < /usr/src/freepbx/installlib/SQL/cdr.sql
    mysql -u$DB_USER -p$DB_PASS -h$DB_HOST -P$DB_PORT -e 'USE '$DB_NAME'; UPDATE freepbx_settings SET `value` = "'$DB_HOST'" WHERE keyword = "CDRDBHOST"; UPDATE freepbx_settings SET `value` = "'$DB_NAME'" WHERE keyword = "CDRDBNAME"; UPDATE freepbx_settings SET `value` = "'$DB_PASS'" WHERE keyword = "CDRDBPASS"; UPDATE freepbx_settings SET `value` = "'$DB_USER'" WHERE keyword = "CDRDBUSER"; UPDATE freepbx_settings SET `value` = "mysql" WHERE keyword = "CDRDBTYPE"; UPDATE freepbx_settings SET `value` = "'$DB_PORT'" WHERE keyword = "CDRDBPORT"; UPDATE freepbx_settings SET `value` = "cdr" WHERE keyword = "CDRDBTABLENAME";'
    cp -R $WEBROOT/admin/modules/cdr/install.php $WEBROOT/admin/modules/cdr/.install.php
    sed -i -e 's/\$db_host = !empty(\$db_host) ? \$db_host : "localhost";/\$db_host = !empty(\$db_host) ? \$db_host : "'$DB_HOST'";/g' $WEBROOT/admin/modules/cdr/install.php
    sed -i -e 's/\$db_name = !empty(\$db_name) ? \$db_name : "asteriskcdrdb";/\$db_name = !empty(\$db_name) ? \$db_name : "'$DB_NAME'";/g' $WEBROOT/admin/modules/cdr/install.php
    print_notice '** [freepbx] Module install: cdr'
    check_process
    silent fwconsole ma install cdr
    cp -R $WEBROOT/admin/modules/cdr/.install.php $WEBROOT/admin/modules/cdr/install.php
  else
    print_notice "Module install: cdr"
    check_process
    silent fwconsole ma install cdr
  fi
    print_notice "Module install: callrecordings, conferences, dashboard, featurecodeadmin, infoservices, logfiles, music, sipsettings, voicemail "
    check_process
    silent fwconsole ma downloadinstall soundlang recordings voicemail sipsettings infoservices featurecodeadmin logfiles conferences callrecording dashboard music
    print_notice "Module install: certman, userman, pm2"
    check_process
    silent fwconsole ma downloadinstall certman userman pm2
    silent fwconsole setting SHOWLANGUAGE 1
    silent fwconsole chown
    silent fwconsole reload
    chown -R asterisk. /home/asterisk/.npm
    print_notice "Module install: ucp"
    check_process
    # ucp fix https://community.freepbx.org/t/ucp-upgrade-error/58273
    touch /usr/bin/icu-config
    echo "icuinfo 2>/dev/null|grep \"version\"|sed 's/.*>\(.*\)<.*/\1/g'" > /usr/bin/icu-config
    chmod +x /usr/bin/icu-config
    silent fwconsole ma downloadinstall ucp
    if [[ "$ENABLE_XMPP" = "TRUE" ]] || [[ "$ENABLE_XMPP" = "true" ]];  then
      print_notice "Starting MongoDB temporarily"
      mkdir -p /data/var/lib/mongodb
      mkdir -p /var/log/mongodb
      touch /var/log/mongodb/mongodb.log
      chown -R 777 /var/log/mongodb/mongodb.log
      mongod --unixSocketPrefix=/var/run/mongodb --config /etc/mongodb.conf run &
      print_notice "Module install: xmpp"
      check_process
      silent fwconsole ma downloadinstall xmpp
      print_notice "Stopping MongoDB"
      silent mongod --unixSocketPrefix=/var/run/mongodb --config /etc/mongodb.conf --shutdown
    fi
    if [[ -v INSTALL_ADDITIONAL_MODULES ]] ; then
      print_notice "Attempting to install additional FreePBX modules '${INSTALL_ADDITIONAL_MODULES}'"
      modules=$(echo ${INSTALL_ADDITIONAL_MODULES} | tr "," "\n")
      for module in $modules
      do
        print_notice "Module install ${module}"
        silent fwconsole ma downloadinstall $module
      done
    fi
    silent fwconsole chown
    silent fwconsole reload
    silent fwconsole restart
    print_info "Finished installation of FreePBX modules - proceeding with next phase of install"
    silent fwconsole stop
    cd /
    rm -rf /usr/src/freepbx

  if [ "$ENABLE_FOP" = "TRUE" ] || [ "$ENABLE_FOP" = "true" ];  then
      ### FOP2 Installation
      print_info "Starting installation of Flash Operator Panel 2"
      silent fwconsole start
      mkdir -p /data/usr/local/fop2
      mkdir -p /var/log/apache2
      cd /usr/src
      silent wget http://download.fop2.com/install_fop2.sh
      chmod +x install_fop2.sh
      silent ./install_fop2.sh
      chown -R asterisk. /usr/local/fop2/
      rm -rf /usr/src/*
      silent service apache2 stop
      silent service fop2 stop
      silent fwconsole stop
      chown -R asterisk. /usr/local/fop2/
  fi

    touch /data/.installed
    echo $ASTERISK_VERSION > /etc/asterisk/.asterisk-version
fi

### Data Persistence Workaround
  if [ ! -f /usr/sbin/fwconsole ]; then
       ln -s /var/lib/asterisk/bin/fwconsole /usr/sbin/fwconsole
  fi

  if [ ! -f /usr/sbin/amportal ]; then
       ln -s /var/lib/asterisk/bin/amportal /usr/sbin/amportal
  fi

  if [ ! -f /data/etc/amportal.conf ]; then
      mkdir -p /data/etc/
      cp -R /etc/amportal.conf /data/etc/
      rm -rf /etc/amportal.conf
      touch /data/etc/amportal.conf
      chown asterisk:asterisk /data/etc/amportal.conf
      ln -s /data/etc/amportal.conf /etc/amportal.conf
  else
      ln -s /data/etc/amportal.conf /etc/amportal.conf
      touch /data/etc/amportal.conf
  fi

  if [[ "$DB_EMBEDDED" = "TRUE" ]] || [[ "$DB_EMBEDDED" = "true" ]];  then
      if [ ! -f /data/etc/freepbx.conf ]; then
         mkdir -p /data/etc/
         cp -R /etc/freepbx.conf /data/etc/
         rm -rf /etc/freepbx.conf
         touch /data/etc/freepbx.conf
         chown asterisk:asterisk /data/etc/freepbx.conf
         ln -s /data/etc/freepbx.conf /etc/freepbx.conf
      else
         ln -s /data/etc/freepbx.conf /etc/freepbx.conf
         touch /data/etc/freepbx.conf
      fi
  fi

if [ "$DB_EMBEDDED" = "FALSE" ];  then
### Setup Dynamic Configuration
  print_notice "Setting configuration"
  cat <<EOF > /etc/freepbx.conf
<?php
\$amp_conf['AMPDBUSER'] = '$DB_USER';
\$amp_conf['AMPDBPASS'] = '$DB_PASS';
\$amp_conf['AMPDBHOST'] = '$DB_HOST';
\$amp_conf['AMPDBNAME'] = '$DB_NAME';
\$amp_conf['AMPDBENGINE'] = 'mysql';
\$amp_conf['CDRDBNAME'] = '$DB_NAME';
\$amp_conf['CDRDBHOST'] = '$DB_HOST';
\$amp_conf['CDRDBNAME'] = '$DB_NAME';
\$amp_conf['CDRDBUSER'] = '$DB_USER';
\$amp_conf['CDRDBPASS'] = '$DB_PASS';
\$amp_conf['CDRDBTYPE'] = 'mysql';
require_once('$WEBROOT/admin/bootstrap.php');
?>
EOF

  cat <<EOF > /etc/odbc.ini
[MySQL-asteriskcdrdb]
Description = MySQL connection to 'asteriskcdrdb' database
driver = MySQL
server = $DB_HOST
User = $DB_USER
Password = $DB_PASS
database = $DB_NAME
Port = $DB_PORT
option = 3

[asteriskcdrdb]
Description = MySQL connection to 'asteriskcdrdb' database
driver = MySQL
server = $DB_HOST
User = $DB_USER
Password = $DB_PASS
database = $DB_NAME
Port = $DB_PORT
option = 3

EOF
fi

if [ ! -f /etc/asterisk/cdr_adaptive_odbc.conf ]; then
  cat <<EOF > /etc/asterisk/cdr_adaptive_odbc.conf
[asteriskcdrdb]
connection=asteriskcdrdb
table=cdr
alias start => calldate
loguniqueid=yes
EOF
fi

chown asterisk:asterisk /etc/freepbx.conf

if [[ "$DB_EMBEDDED" = "FALSE" ]] || [[ "$DB_EMBEDDED" = "false" ]];  then
  ### Set RTP Ports
  print_notice "Setting RTP ports - start: '${RTP_START}' finish: '${RTP_FINISH}'"
  mysql -u$DB_USER -p$DB_PASS -h$DB_HOST -P$DB_PORT -e 'USE '$DB_NAME'; INSERT INTO sipsettings (keyword, data, seq, type) VALUES ("rtpstart","'$RTP_START'",1,0) ON DUPLICATE KEY UPDATE data="'$RTP_START'";INSERT INTO sipsettings (keyword, data, seq, type) VALUES ("rtpend","'$RTP_FINISH'",1,0) ON DUPLICATE KEY UPDATE data="'$RTP_FINISH'";'
  ### Fix a Freepbx bug with upgrades
  mysql -u$DB_USER -p$DB_PASS -h$DB_HOST -P$DB_PORT -e 'USE '$DB_NAME'; ALTER TABLE featurecodes CHANGE column helptext helptext VARCHAR(10000);'
fi

print_info "Starting Asterisk"

if [ ! -f "/usr/sbin/fwconsole" ]; then
  print_error "Can't seem to locate /usr/sbin/fwconsole.. Exiting. This is likely because the initial installation of FreePBX failed, and usually an upstream error. Try again by deleting all volumes and databases and starting from scratch before submitting an issue."
  exit 1
fi

silent fwconsole chown
silent fwconsole start
silent fwconsole reload
chown -R asterisk /etc/asterisk/*
chown -R asterisk:asterisk /etc/amportal.conf

### Custom File Support
  if [ -d /assets/custom ] ; then
     print_warn "Custom files found, copying over top of original.."
     cp -R /assets/custom/* /
     chown -R asterisk. /var/www/html/
     chown -R asterisk. /var/lib/asterisk
     chown -R asterisk. /var/spool/asterisk
  fi

### Check to see if FOP Enabled and exists (upgrade catcher)
if [ "$ENABLE_FOP" = "TRUE" ] || [ "$ENABLE_FOP" = "true" ];  then
    if [ ! -f /usr/local/fop2/fop2_server ] ; then
      print_info "Installing operator panel"

        ### FOP2 Installation
        silent fwconsole start
        mkdir -p /data/usr/local/fop2
        mkdir -p /var/log/apache2
        cd /usr/src
        silent wget http://download.fop2.com/install_fop2.sh
        chmod +x install_fop2.sh
        silent ./install_fop2.sh
        chown -R asterisk. /usr/local/fop2/
        rm -rf /usr/src/*
        silent service apache2 stop
        silent service fop2 stop
        silent fwconsole stop
    fi
fi

### Apache Setup
cat >> /etc/apache2/conf-available/allowoverride.conf << EOF
<Directory $WEBROOT>
    AllowOverride All
    </Directory>
EOF

cat > /etc/apache2/sites-enabled/000-default.conf << EOF
Listen 73

ExtendedStatus On

<VirtualHost *:73>
CustomLog /dev/null common
ErrorLog /dev/null

<Location /server-status>
    SetHandler server-status
    Order deny,allow
    Deny from all
    Allow from localhost
</Location>
</VirtualHost>

<VirtualHost *:$HTTP_PORT>
EOF

if [ "$UCP_FIRST" = "TRUE" ] || [ "$UCP_FIRST" = "true" ] ; then
  echo "    DocumentRoot "$WEBROOT"/ucp" >> /etc/apache2/sites-enabled/000-default.conf
  echo '    Alias "'$ADMIN_DIRECTORY'" "'$WEBROOT'/admin"' >> /etc/apache2/sites-enabled/000-default.conf
  echo '    Alias "/ucp" "'$WEBROOT'/ucp"' >> /etc/apache2/sites-enabled/000-default.conf
else
  echo "    DocumentRoot "$WEBROOT >> /etc/apache2/sites-enabled/000-default.conf
fi

if [ "$ENABLE_FOP" = "TRUE" ] || [ "$ENABLE_FOP" = "true" ];  then
  echo '    Alias "'$FOP_DIRECTORY'" "/var/www/html/fop2"' >>/etc/apache2/sites-enabled/000-default.conf
fi

### Update CDR hack script
sed -i -e "s#<WEBROOT>#$WEBROOT#g" /usr/sbin/upgrade-cdr

cat >> /etc/apache2/sites-enabled/000-default.conf << EOF

  ErrorLog /var/log/apache2/error.log
  CustomLog /var/log/apache2/access.log common
  <Location /server-status>
    SetHandler server-status
    Order deny,allow
    Deny from all
 </Location>
</VirtualHost>
EOF

if [ "$VIRTUAL_PROTO" = "https" ] || [ "$ENABLE_SSL" = "true" ] || [ "$ENABLE_SSL" = "TRUE" ] ;  then
    print_notice "Enabling SSL"

    if [ ! -f /certs/${TLS_CERT} ] && [ ! -f /certs/${TLS_KEY} ]; then
            print_warn "No SSL certs found, autogenerating self-signed - WebRTC will not work with a self-signed certificate!"
            cat <<EOF > /tmp/openssl.cnf
[ req ]
default_bits = 2048
encrypt_key = yes
distinguished_name = req_dn
x509_extensions = cert_type
prompt = no

[ req_dn ]
C=XX
ST=XX
L=Self Signed
O=Freepbx
OU=Freepbx
CN=*
emailAddress=selfsigned@example.com

[ cert_type ]
nsCertType = server
EOF

    silent openssl req -new -x509 -nodes -days 365 -config /tmp/openssl.cnf -out /certs/cert.pem -keyout /certs/key.pem
    chmod 0600 /certs/key.pem
    rm -rf /tmp/openssl.cnf
    TLS_CERT="cert.pem"
    TLS_KEY="key.pem"
    fi

    silent a2enmod ssl
    cat >> /etc/apache2/sites-enabled/000-default.conf << EOF
<VirtualHost *:$HTTPS_PORT>
    SSLEngine on
    SSLCertificateFile "/certs/$TLS_CERT"
    SSLCertificateKeyFile "/certs/$TLS_KEY"
    ErrorLog /var/log/apache2/error.log
    CustomLog /var/log/apache2/access.log common
EOF

if [ "$UCP_FIRST" = "TRUE" ] || [ "$UCP_FIRST" = "true" ] ; then
  echo "    DocumentRoot "$WEBROOT"/ucp" >> /etc/apache2/sites-enabled/000-default.conf
  echo '    Alias "'$ADMIN_DIRECTORY'" "'$WEBROOT'/admin"' >> /etc/apache2/sites-enabled/000-default.conf
  echo '    Alias "/ucp" "'$WEBROOT'/ucp"' >> /etc/apache2/sites-enabled/000-default.conf
else
  echo "    DocumentRoot $WEBROOT" >> /etc/apache2/sites-enabled/000-default.conf
fi

if [ "$ENABLE_FOP" = "TRUE" ] || [ "$ENABLE_FOP" = "true" ];  then
  echo '    Alias "'$FOP_DIRECTORY'" "'$WEBROOT'/fop2"' >>/etc/apache2/sites-enabled/000-default.conf
  sed -i -e 's#ssl_certificate_file=.*#ssl_certificate_file=/certs/'$TLS_CERT'#g' /usr/local/fop2/fop2.cfg
  sed -i -e 's#ssl_certificate_key_file=.*#ssl_certificate_key_file=/certs/'$TLS_KEY'#g' /usr/local/fop2/fop2.cfg
fi

cat >> /etc/apache2/sites-enabled/000-default.conf << EOF
    <Location /server-status>
    SetHandler server-status
    Order deny,allow
    Deny from all
  </Location>
</VirtualHost>

EOF
fi

# Write ports.conf
cat > /etc/apache2/ports.conf <<EOF
Listen $HTTP_PORT

<IfModule ssl_module>
  Listen $HTTPS_PORT
</IfModule>

<IfModule mod_gnutls.c>
  Listen $HTTPS_PORT
</IfModule>
EOF

silent a2enmod remoteip

cat >> /etc/apache2/conf-available/remoteip.conf << EOF
RemoteIPHeader X-Real-IP
RemoteIPTrustedProxy 10.0.0.0/8
RemoteIPTrustedProxy 172.16.0.0/12
RemoteIPTrustedProxy 192.168.0.0/16
EOF

silent a2enconf allowoverride
silent a2enconf remoteip.conf

sed -i 's/\(APACHE_RUN_USER=\)\(.*\)/\1asterisk/g' /etc/apache2/envvars
sed -i 's/\(APACHE_RUN_GROUP=\)\(.*\)/\1asterisk/g' /etc/apache2/envvars
mkdir -p /var/log/apache2
chown -R root:adm /var/log/apache2
chown asterisk. /run/lock/apache2
chown -R asterisk. /usr/local/fop2

### Disable Indexes if outside of regular webroot
if [ "$WEBROOT" != "/var/www/html" ]; then
  silent a2dismod autoindex -f
fi

### SMTP Config
 if [ "$ENABLE_SMTP" = "TRUE" ] || [ "$ENABLE_SMTP" = "true" ];  then
   echo 'sendmail_path="/usr/bin/msmtp -C /etc/msmtprc -t "' > /etc/php/5.6/apache2/conf.d/smtp.ini
   echo 'sendmail_path="/usr/bin/msmtp -C /etc/msmtprc -t "' > /etc/php/5.6/cli/conf.d/smtp.ini
   chown asterisk:asterisk /etc/msmtprc
   chmod 600 /etc/msmtprc
 fi

### FOP2 Setup
 if [ "$ENABLE_FOP" = "TRUE" ] || [ "$ENABLE_FOP" = "true" ];  then
    print_info "Starting operator panel"
    rm -rf /var/run/fop2.*
    mkdir -p /var/log/fop
    chown -R asterisk. /var/log/fop
    sed -i -e "s#manager_host=.*#manager_host=127.0.0.1#g" /usr/local/fop2/fop2.cfg
    /usr/local/fop2/fop2_server -d --logdir /var/log/fop
 fi

silent service apache2 restart

if [ "$UCP_FIRST" = "TRUE" ] ; then
   print_info "Web server started - container initialization completed - visit your http(s)://yoursite/${ADMIN_DIRECTORY} to administer"
else
   print_info "Web server started - container initialization completed - visit your http(s)://yoursite/ to administer"
fi

liftoff